openapi: 3.0.3
info:
  title: Yandex Timetable API Combined
  description: Combined API for accessing nearest stations and search functionalities of Yandex Timetable.
  version: 3.0.0
servers:
  - url: https://api.rasp.yandex.net/v3.0

paths:
  /nearest_stations/:
    get:
      tags:
      - nearest_stations
      summary: Список ближайших станций
      operationId: getNearestStations
      parameters:
      - name: apikey
        in: query
        description: API key
        required: true
        schema:
          type: string
      - name: lat
        in: query
        description: широта
        required: true
        schema:
          type: number
      - name: lng
        in: query
        description: долгота
        required: true
        schema:
          type: number
      - name: distance
        in: query
        description: радиус охвата
        required: true
        schema:
          type: integer
      - name: format
        in: query
        description: json или xml
        required: false
        schema:
          type: string
      - name: lang
        in: query
        description: lang
        required: false
        schema:
          type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StationsResponse'
  /search/:
    get:
      tags:
      - search
      summary: Расписание рейсов между станциями
      operationId: searchRoutes
      parameters:
        - name: apikey
          in: query
          description: Ключ доступа к API. Параметр можно не передавать, если ключ доступа указан в заголовке Authorization.
          required: false
          schema:
            type: string
        - name: from
          in: query
          description: код станции отправления.
          required: true
          schema:
            type: string
        - name: to
          in: query
          description: код станции прибытия.
          required: true
          schema:
            type: string
        - name: format
          in: query
          description: формат — XML или JSON. JSON по умолчанию.
          required: false
          schema:
            type: string
            enum: [json, xml]
        - name: lang
          in: query
          description: Язык возвращаемой информации (по умолчанию ru_RU).
          required: false
          schema:
            type: string
        - name: date
          in: query
          description: Дата, на которую необходимо получить список рейсов, в ISO 8601 (YYYY-MM-DD).
          required: false
          schema:
            type: string
            format: date
        - name: transport_types
          in: query
          description: Тип транспортного средства.
          required: false
          schema:
            type: string
        - name: system
          in: query
          description: Система кодирования, в которой указывается код станции отправления и код станции прибытия (параметры from, to) в запросе.
          required: false
          schema:
            type: string
        - name: show_systems
          in: query
          description: Система кодирования, коды которой следует добавить к описанию станций в результатах поиска (элемент codes, вложенный в элементы from и to)..
          required: false
          schema:
            type: string
        - name: offset
          in: query
          description: Смещение относительно первого результата поиска.
          required: false
          schema:
            type: integer
        - name: limit
          in: query
          description: Максимальное количество результатов поиска в ответе.
          required: false
          schema:
            type: integer
        - name: add_days_mask
          in: query
          description: Признак, который указывает, что для каждой нитки в ответе следует вернуть календарь хождения.
          required: false
          schema:
            type: boolean
        - name: result_timezone
          in: query
          description: Часовой пояс, для которого следует указывать даты и времена в ответе.
          required: false
          schema:
            type: string
        - name: transfers
          in: query
          description: Признак, разрешающий добавить к результатам поиска маршруты с пересадками.
          required: false
          schema:
            type: boolean
      responses:
        '200':
          description: Ответ представляет собой список рейсов с информацией по каждому рейсу.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchResponse'
  /schedule/:
    get:
      tags:
      - schedule
      summary: Расписание рейсов по станции
      operationId: getScheduleForStation
      parameters:
        - name: apikey
          in: query
          description: API key for access. Can also be provided in the Authorization header.
          required: false
          schema:
            type: string
        - name: station
          in: query
          description: Station code, must be specified in the coding system.
          required: true
          schema:
            type: string
        - name: lang
          in: query
          description: Language of the returned information (ISO 639 code_country code).
          required: false
          schema:
            type: string
        - name: format
          in: query
          description: Response format, either JSON or XML. Default is JSON.
          required: false
          schema:
            type: string
            enum:
              - json
              - xml
        - name: date
          in: query
          description: Date for which to retrieve the schedule, in ISO 8601 format (YYYY-MM-DD).
          required: false
          schema:
            type: string
            format: date
        - name: transport_types
          in: query
          description: Type of transport to search for.
          required: false
          schema:
            type: string
        - name: event
          in: query
          description: Event to filter the schedule by, either arrival or departure.
          required: false
          schema:
            type: string
            enum:
              - arrival
              - departure
        - name: system
          in: query
          description: Coding system for the station parameter in the request.
          required: false
          schema:
            type: string
        - name: show_systems
          in: query
          description: Coding system in which to return station codes in the response.
          required: false
          schema:
            type: string
        - name: direction
          in: query
          description: Direction for which to retrieve the schedule, applicable for suburban transport.
          required: false
          schema:
            type: string
        - name: result_timezone
          in: query
          description: Timezone for displaying dates and times in the response.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Schedule information for the specified station.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleResponse'
  /thread/:
    get:
      tags:
      - thread
      summary: Список станций следования
      operationId: getThreadDetails
      parameters:
        - name: apikey
          in: query
          description: API key for access. Can also be provided in the Authorization header.
          required: false
          schema:
            type: string
        - name: uid
          in: query
          description: Identifier of the thread in Yandex Timetables.
          required: true
          schema:
            type: string
        - name: from
          in: query
          description: Departure station code, must be specified in the coding system.
          required: false
          schema:
            type: string
        - name: to
          in: query
          description: Arrival station code, must be specified in the coding system.
          required: false
          schema:
            type: string
        - name: format
          in: query
          description: Response format, either JSON or XML. Default is JSON.
          required: false
          schema:
            type: string
            enum:
              - json
              - xml
        - name: lang
          in: query
          description: Language of the returned information (ISO 639 code_country code).
          required: false
          schema:
            type: string
        - name: date
          in: query
          description: Date for which to retrieve the thread details, in ISO 8601 format (YYYY-MM-DD).
          required: false
          schema:
            type: string
            format: date
        - name: show_systems
          in: query
          description: Coding system in which to return station codes in the response.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Detailed information about the specified transport thread.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreadResponse'
  /nearest_settlement/:
    get:
      tags:
      - nearest_settlement
      summary: Ближайший город
      operationId: getNearestSettlement
      parameters:
        - name: apikey
          in: query
          description: API key for access. Can also be provided in the Authorization header.
          required: false
          schema:
            type: string
        - name: lat
          in: query
          description: широта
          required: true
          schema:
            type: number
        - name: lng
          in: query
          description: долгота
          required: true
          schema:
            type: number
        - name: distance
          in: query
          description: Радиус, в котором следует искать ближайший город, в километрах.
          required: false
          schema:
            type: number
        - name: lang
          in: query
          description: Language of the returned information (ISO 639 code_country code).
          required: false
          schema:
            type: string
        - name: format
          in: query
          description: json или xml
          required: false
          schema:
            type: string
      responses:
        "200":
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NearestSettlementResponse'
  /carrier/:
    get:
      tags:
      - carrier
      summary: Информация о перевозчике
      operationId: getCarrierInformation
      parameters:
        - name: apikey
          in: query
          description: API key for access. Can also be provided in the Authorization header.
          required: false
          schema:
            type: string
        - name: code
          in: query
          description: Carrier code, default in Yandex Timetables coding system. Use `system` parameter to specify other coding systems.
          required: true
          schema:
            type: string
        - name: format
          in: query
          description: Response format, either JSON or XML. Default is JSON.
          required: false
          schema:
            type: string
            enum:
              - json
              - xml
        - name: lang
          in: query
          description: Language of the returned information (ISO 639 code_country code).
          required: false
          schema:
            type: string
        - name: system
          in: query
          description: Coding system for the carrier code in the request.
          required: false
          schema:
            type: string
            enum:
              - yandex
              - iata
              - sirena
              - express
              - esr
      responses:
        '200':
          description: Information about the specified transport carrier(s).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CarrierResponse'
  /stations_list/:
    get:
      tags:
      - stations_list
      summary: Список всех доступных станций
      operationId: getStationsList
      parameters:
        - name: apikey
          in: query
          description: API key for access. Can also be provided in the Authorization header.
          required: false
          schema:
            type: string
        - name: format
          in: query
          description: Response format, either JSON or XML. Default is JSON.
          required: false
          schema:
            type: string
            enum:
              - json
              - xml
        - name: lang
          in: query
          description: Language of the returned information (ISO 639 code_country code).
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Hierarchical list of countries, regions, settlements, and stations.
          content:
            text/html:
              schema:
                $ref: '#/components/schemas/StationsList'
  /copyright/:
    get:
      tags:
      - copyright
      summary: Копирайт Яндекс Расписаний
      operationId: getCopyrightInformation
      parameters:
        - name: apikey
          in: query
          description: API key for access. Can also be provided in the Authorization header.
          required: false
          schema:
            type: string
        - name: format
          in: query
          description: Response format, either JSON or XML. Default is JSON.
          required: true
          schema:
            type: string
            enum:
              - json
              - xml
      responses:
        '200':
          description: Copyright information including banners and notification text.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CopyrightInfo'
components:
  schemas:
    SearchResponse:
        type: object
        properties:
            pagination:
              $ref: '#/components/schemas/Pagination'
            interval_segments:
              type: array
              items:
                $ref: '#/components/schemas/IntervalSegment'
            segments:
              type: array
              items:
                $ref: '#/components/schemas/Segment'
            search:
              $ref: '#/components/schemas/Search'
    ScheduleResponse:
        type: object
        properties:
            pagination:
              $ref: '#/components/schemas/Pagination'
            date:
              type: string
            station:
              $ref: '#/components/schemas/Station'
            schedule:
              type: array
              items:
                $ref: '#/components/schemas/Schedule'
            schedule_direction:
              $ref: '#/components/schemas/ScheduleDirection'
            directions:
              type: array
              items:
                $ref: '#/components/schemas/Direction'
    ThreadResponse:
        type: object
        properties:
            except_days:
              type: string
            arrival_date:
              type: string
            from:
              type: string
            uid:
              type: string
            title:
              type: string
            interval:
              $ref: '#/components/schemas/Interval'
            departure_date:
              type: string
            start_time:
              type: string
            number:
              type: string
            short_title:
              type: string
            days:
              type: string
            to:
              type: string
            carrier:
              $ref: '#/components/schemas/Carrier'
            stops:
              type: array
              items:
                $ref: '#/components/schemas/Stop'
            vehicle:
              type: string
            start_date:
              type: string
            transport_subtype:
              $ref: '#/components/schemas/TransportSubtype'
            express_type:
              type: string
    StationsResponse:
        type: object
        properties:
            pagination:
              $ref: '#/components/schemas/Pagination'
            stations:
              type: array
              items:
                $ref: '#/components/schemas/Station'
    NearestSettlementResponse:
        type: object
        properties:
            distance:
              type: number
            code:
              type: string
            title:
              type: string
            popular_title:
              type: string
            short_title:
              type: string
            lat:
              type: number
            lng:
              type: number
            type:
              type: string
    CarrierResponse:
        type: object
        properties:
            carrier:
              $ref: '#/components/schemas/Carrier'
    StationsList:
        type: object
        properties:
            countries:
              type: array
              items:
                $ref: '#/components/schemas/Country'
    CopyrightInfo:
        type: object
        properties:
            copyright:
              $ref: '#/components/schemas/Copyright'
    Pagination:
        type: object
        properties:
            total:
              type: integer
            limit:
              type: integer
            offset:
              type: integer
    IntervalSegment:
        type: object
        properties:
            from:
              $ref: '#/components/schemas/Station'
            thread:
              $ref: '#/components/schemas/Thread'
            departure_platform:
              type: string
            stops:
              type: string
            departure_terminal:
              type: string
            to:
              $ref: '#/components/schemas/Station'
            has_transfers:
              type: boolean
            tickets_info:
              $ref: '#/components/schemas/TicketsInfo'
            duration:
              type: integer
            arrival_terminal:
              type: string
            start_date:
              type: string
            arrival_platform:
              type: string
    Segment:
        type: object
        properties:
          arrival:
            type: string
          from:
            $ref: '#/components/schemas/Station'
          thread:
            $ref: '#/components/schemas/Thread'
          departure_platform:
            type: string
          departure:
            type: string
          stops:
            type: string
          departure_terminal:
            type: string
          to:
            $ref: '#/components/schemas/Station'
          has_transfers:
            type: boolean
          tickets_info:
            $ref: '#/components/schemas/TicketsInfo'
          duration:
            type: integer
          arrival_terminal:
            type: string
          start_date:
            type: string
          arrival_platform:
            type: string
    Station:
        type: object
        properties:
          code:
            type: string
          title:
            type: string
          station_type:
            type: string
          station_type_name:
            type: string
          popular_title:
            type: string
          short_title:
            type: string
          transport_type:
            type: string
          type:
            type: string
          codes:
            $ref: '#/components/schemas/Codes'
          distance:
            type: number
          type_choices:
            $ref: '#/components/schemas/TypeChoice'
          majority:
            type: integer
          lat:
            type: number
          lng:
            type: number
    Thread:
        type: object
        properties:
          uid:
            type: string
          title:
            type: string
          interval:
            $ref: '#/components/schemas/Interval'
          number:
            type: string
          short_title:
            type: string
          thread_method_link:
            type: string
          carrier:
            $ref: '#/components/schemas/Carrier'
          transport_type:
            type: string
          vehicle:
            type: string
          transport_subtype:
            $ref: '#/components/schemas/TransportSubtype'
          express_type:
            type: string
    Interval:
        type: object
        properties:
          density:
            type: string
          end_time:
            type: string
          begin_time:
            type: string
    TicketsInfo:
        type: object
        properties:
          et_marker:
            type: boolean
          places:
            type: array
            items:
              $ref: '#/components/schemas/Place'
    Place:
        type: object
        properties:
          currency:
            type: string
          price:
            $ref: '#/components/schemas/Price'
          name:
            type: string
    Price:
        type: object
        properties:
          cents:
            type: integer
          whole:
            type: integer
    Carrier:
        type: object
        properties:
          code:
            type: integer
          contacts:
            type: string
          url:
            type: string
          logo_svg:
            type: string
          title:
            type: string
          phone:
            type: string
          codes:
            $ref: '#/components/schemas/Code'
          address:
            type: string
          logo:
            type: string
          email:
            type: string
    TransportSubtype:
        type: object
        properties:
          color:
            type: string
          code:
            type: string
          title:
            type: string
    Code:
        type: object
        properties:
          icao:
            type: string
          sirena:
            type: string
          iata:
            type: string
    Search:
        type: object
        properties:
          date:
            type: string
          to:
            $ref: '#/components/schemas/Station'
          from:
            $ref: '#/components/schemas/Station'
    Schedule:
        type: object
        properties:
          except_days:
            type: string
          arrival:
            type: string
          thread:
            $ref: '#/components/schemas/Thread'
          is_fuzzy:
            type: boolean
          days:
            type: string
          stops:
            type: string
          departure:
            type: string
          terminal:
            type: string
          platform:
            type: string
    Codes:
        type: object
        properties:
          yandex:
            type: string
          esr:
            type: string
          express:
            type: string
    ScheduleDirection:
        type: object
        properties:
          code:
            type: string
          title:
            type: string
    Direction:
        type: object
        properties:
          code:
            type: string
          title:
            type: string
    Stop:
        type: object
        properties:
          arrival:
            type: string
          departure:
            type: string
          duration:
            type: integer
          stop_time:
            type: integer
          station:
            $ref: '#/components/schemas/Station'
          terminal:
            type: string
          platform:
            type: string
    TypeChoice:
        type: object
        properties:
          schedule:
            $ref: '#/components/schemas/TypeChoiceURL'
    TypeChoiceURL:
        type: object
        properties:
          desktop_url:
            type: string
          touch_url:
            type: string
    Country:
        type: object
        properties:
          regions:
            type: array
            items:
              $ref: '#/components/schemas/Region'
          codes:
            $ref: '#/components/schemas/CountiesCodes'
          title:
            type: string
    Region:
        type: object
        properties:
          settlements:
            type: array
            items:
              $ref: '#/components/schemas/Settlement'
          codes:
            $ref: '#/components/schemas/CountiesCodes'
          title:
            type: string
    Settlement:
        type: object
        properties:
          stations:
            type: array
            items:
              $ref: '#/components/schemas/Stations'
          codes:
            $ref: '#/components/schemas/CountiesCodes'
          title:
            type: string
    Stations:
        type: object
        properties:
          direction:
            type: string
          codes:
            $ref: '#/components/schemas/CountiesCodes'
          station_type:
            type: string
          title:
            type: string
    CountiesCodes:
        type: object
        properties:
          esr_code:
            type: string
          yandex_code:
            type: string
    Copyright:
        type: object
        properties:
          logo_vm:
            type: string
          url:
            type: string
          logo_vd:
            type: string
          logo_hy:
            type: string
          logo_hd:
            type: string
          logo_vy:
            type: string
          text:
            type: string
          logo_hm:
            type: string
